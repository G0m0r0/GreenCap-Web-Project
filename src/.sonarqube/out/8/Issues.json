{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.4.0.0",
        "fileVersion": "4.4.0-4.22520.11 (9e075f03)",
        "semanticVersion": "4.4.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Programming/SoftUni-Web-Project/src/Web/GreenCap.Web.ViewModels/OutputViewModel/PostOutputViewModel.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 57,
                  "endLine": 28,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1845",
          "level": "note",
          "message": "Use span-based 'string.Concat' and 'AsSpan' instead of 'Substring'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Programming/SoftUni-Web-Project/src/Web/GreenCap.Web.ViewModels/OutputViewModel/PostOutputViewModel.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 32,
                  "endColumn": 136
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Programming/SoftUni-Web-Project/src/Web/GreenCap.Web.ViewModels/OutputViewModel/EventOutputViewModel.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 20,
                  "endLine": 52,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1845": {
          "id": "CA1845",
          "shortDescription": "Use span-based 'string.Concat'",
          "fullDescription": "It is more efficient to use 'AsSpan' and 'string.Concat', instead of 'Substring' and a concatenation operator.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1845",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Just because you can do something, doesn’t mean you should, and that’s the case with nested ternary operations. Nesting ternary operators results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you) scratching their heads and cursing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6444": {
          "id": "S6444",
          "shortDescription": "Not specifying a timeout for regular expressions is security-sensitive",
          "fullDescription": "Not specifying a timeout for regular expressions can lead to a Denial-of-Service attack. Pass a timeout when using System.Text.RegularExpressions to process untrusted input because a malicious user might craft a value for which the evaluation lasts excessively long.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6444",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}